name: Docker Build and Scan

on:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'src/**'
  pull_request:
    paths:
      - 'Dockerfile'
      - 'src/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-and-scan:
    name: Build and Scan Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b6f3e222546a7ab78d7887c4176584bb # v3.3.0

      - name: Build Docker image for scanning
        id: build
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: .
          push: false
          load: true # Load the image into the local Docker daemon
          tags: py-omop2neo4j-lpg:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@6e7b7d1fd3e4f96686212233a7322b276365142a # v0.20.0
        with:
          image-ref: 'py-omop2neo4j-lpg:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
