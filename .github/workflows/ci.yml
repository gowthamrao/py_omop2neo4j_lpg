name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    name: Test - ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12"]

    services:
      postgres-test:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U testuser -d testdb"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

      neo4j-test:
        image: neo4j:latest
        env:
          NEO4J_AUTH: neo4j/StrongPass123
          NEO4J_apoc_import_file_enabled: "true"
          NEO4J_apoc_import_file_use__neo4j__config: "true"
          NEO4JLABS_PLUGINS: '["apoc"]'
        ports:
          - 7474:7474
          - 7687:7687
        options: >-
          --health-cmd "wget -O /dev/null --server-response --timeout=2 http://localhost:7474 2>&1 | awk '/^  HTTP/{print $$2}' | grep -q 200"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10

    steps:
    - name: Checkout repository
      uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.7

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        pip install poetry
        poetry config virtualenvs.in-project true

    - name: Set up cache
      uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'

    - name: Install dependencies
      run: poetry install -vv --with test

    - name: Run pre-commit hooks
      uses: pre-commit/action@225570515c0e0737a1188265004f26042456b8e8 # v3.0.1

    - name: Run unit tests
      run: poetry run pytest -m unit --cov=src --cov-report=xml:coverage-unit.xml
      env:
        NEO4J_URI: "bolt://localhost:${{ job.services.neo4j-test.ports[7687] }}"
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: StrongPass123
        POSTGRES_HOST: localhost
        POSTGRES_PORT: ${{ job.services.postgres-test.ports[5432] }}
        POSTGRES_USER: testuser
        POSTGRES_PASSWORD: testpass
        POSTGRES_DB: testdb

    - name: Run integration tests
      run: poetry run pytest -m integration --cov=src --cov-report=xml:coverage-integration.xml
      env:
        NEO4J_URI: "bolt://localhost:${{ job.services.neo4j-test.ports[7687] }}"
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: StrongPass123
        POSTGRES_HOST: localhost
        POSTGRES_PORT: ${{ job.services.postgres-test.ports[5432] }}
        POSTGRES_USER: testuser
        POSTGRES_PASSWORD: testpass
        POSTGRES_DB: testdb

    - name: Upload Unit Test coverage to Codecov
      if: ${{ !cancelled() }}
      uses: codecov/codecov-action@0cfda1e6f9a0673330615b13222e0e2343468725 # v4.4.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage-unit.xml
        flags: ${{ matrix.os }}-py${{ matrix.python-version }}-unit
        fail_ci_if_error: true
        verbose: true

    - name: Upload Integration Test coverage to Codecov
      if: ${{ !cancelled() }}
      uses: codecov/codecov-action@0cfda1e6f9a0673330615b13222e0e2343468725 # v4.4.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage-integration.xml
        flags: ${{ matrix.os }}-py${{ matrix.python-version }}-integration
        fail_ci_if_error: true
        verbose: true

    - name: Upload failure artifacts
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports-${{ matrix.os }}-py${{ matrix.python-version }}
        path: |
          coverage-unit.xml
          coverage-integration.xml
